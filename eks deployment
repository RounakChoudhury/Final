Deploy nginx in port 80

create an instance 
connect in terminal

create iam user
no policy attach
generate access key and secret key

goto roles
create role:
aws service
ec2
give the following access :
	IAMFullAccess
	AmazonElasticContainerRegistryPublicFullAccess
	AmazonEKSClusterPolicy

goto ec2
select the instance created
actions
security
modify iam role
select the rule created
update iam role

goto terminal

yum update -y
yum install unzip -y

curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

unzip awscliv2.zip
sudo ./aws/install
aws configure

curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp

sudo mv /tmp/eksctl /usr/local/bin
eksctl version

curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

kubectl version --client
ssh-keygen

eksctl create cluster --name my-cluster --region us-east-1 --version 1.32 --vpc-public-subnets subnet-ExampleID1,subnet-ExampleID2 --without-nodegroup

eksctl create nodegroup \
  --cluster my-cluster \ // give the name of the cluster specified in the last line
  --region us-east-1 \
  --name my-node-group \ // give the name of the node group as u wanaa create
  --node-ami-family Ubuntu2204 \
  --node-type t3.micro \ // give your own instance type
  --subnet-ids subnet-086ced1a84c94a342,subnet-01695faa5e0e61d97 \ // give yuor own subnet ids and b from aws
  --nodes 3 \
  --nodes-min 2 \
  --nodes-max 4 \
  --ssh-access \
  --ssh-public-key /root/.ssh/id_rsa.pub

vim rnk.yml

under vim copy paste as it is from line no 69 to 89

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80


kubectl apply -f rnk.yml
kubectl get deployments

kubectl expose deployment nginx-deployment --type=LoadBalancer --port=80 --target-port=80

kubectl get svc
